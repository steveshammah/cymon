openapi: 3.0.0
info:
  title: HealthCloud API by SLADE360
  description: ""
  #termsOfService: "https://www.savannahinformatics.com/terms-of-service"
  #contact:
  #  name: "SIL developers forum"
  #  url: "https://www.savannahinformatics.com/feedback"
  #  email: "developers@slade360.com"
  #license:
  #  name: "SIL API License"
  #  url: "https://www.savannahinformatics.com/api-license"
  version: v1.0.0

servers:
  - url: "https://is-multitenant.slade360.co.ke"
    description: "multitenant testing sandbox"

tags:
  - name: API_AUTHORIZATION
    description: |
      Our authorization server implements the OAuth 2.0 framework and all client applications accessing the resource servers (APIs) should conform to it.
      Before an attempt to access any service is made, the client needs to request an `access_token` from the authorization server and then 
      send this token as a header parameter for every API request.
    x-displayName: API Authorization (OAuth 2.0) # For Redoc.

  - name: MEMBER_ELIGIBILITY
    description: |
      The member eligibility service is an aggregation of all the APIs used to query and manage;
      1. Member details [`beneficiaryCode`, `names`, `dateOfBirth`, `...`]
      3. Insurable benefits a member enjoys [`outpatient`, `inpatient`, `...`]
      4. Benefit balances [`benefitLimit`, `visitLimit`, `availableBalance`, `...`]
      4. Access restrictions imposed on the member by the insurer. [`copays`, `provider panels`, `...`]

      Scroll down for detailed descriptions of the individual APIs.
    x-displayName: Member Eligibility # For Redoc.

  - name: MEMBER_AUTHENTICATION
    description: |
      The member authentication service provides multiple means used to prove member identities. This is a crucial step before any medical service
      is provided to the insured member. The authentication means currently supported are as described below;
      #### 1. Fingerprint Authentication

      A member is authenticated using his/her fingerprints that were captured during the [enrollment process]().
      All service providers using fingerprint authentication should have a properly configured slade fingerprint/card reader.

      #### 2. Guardian Authentication

      Slade does not allow fingerprint enrollment for minor dependendants (< 6 yrs old),
      so we provider a means for an enrolled guardian to authenticate on behalf of the minor dependent.
      The guardian should be a valid family member (Mother, Father, e.t.c) within the same cover.

      #### 3. OTP Authentication

      A one time pin is sent to the member's verified phone contact (Contact verification is part of the member enrollement process).
      This OTP is then used to authenticate the member and authorize a medical visit.

      *This mode of authentication should be explicitly approved by the insurance provider. [SOP Here]()*

      #### 4. Non-Slade Authentication
      A stop-gap means for creating mockup authorizations for members using Non-Wellness cards (Cards not provided by slade).

    x-displayName: Member Authentication # For Redoc.

  - name: START_VISIT
    description: |
      A medical visit is a container within which ***all medical services offered to the patient*** and ***all claims for their payment*** are housed.
      It links all the resources required by the payer/insurer to vet and eventually pay a medical claim. Some of these artefacts include;
      1. An authorization linking a member to the visit.
      2. All preauthorizations requested and approved for the visit.
      3. All claims/invoices raised by the medical provider.
      4. All supporting documents (Claim and invoice attachments)

    x-displayName: Start Visit # For Redoc.

  - name: BALANCE_RESERVATION
    description: |
      Balance reservations provide away for medical providers to hold/reserve a member's benefit balance on slade before billing and submitting claims.
      This makes sure that the amount reserved won't be utilized by another provider serving the same member or their family.

      It is recommended that;
      1. Balance reservations should be made for every service provided to the member. Failure to do this might lead to the claim being rejected if an overutilization occures.
      2. Reserve only the amount to be used for a service (Can be an estimate). Continuously over-reserving might be flagged as fraud.
      3. Immediately release any reservations that might have been made erroneously.

      Below are descriptions of the APIs supporting balance reservation management.
    x-displayName: Balance Reservations # For Redoc.

  - name: CLAIMS
    description: Under developement
    x-displayName: Submit Claims # For Redoc.

# Redoc API Groups.
x-tagGroups:
  - name: Authorization
    tags:
      - API_AUTHORIZATION

  - name: Start Visit APIs
    tags:
      - MEMBER_ELIGIBILITY
      - MEMBER_AUTHENTICATION
      - START_VISIT
      - BALANCE_RESERVATION

  - name: Post Visit APIs
    tags:
      - CLAIMS

# Security.
security:
  - oauth2_sec: []

components:
  securitySchemes:
    oauth2_sec:
      type: oauth2
      description: "Server to server authorization."
      flows:
        clientCredentials:
          tokenUrl: https://accounts.multitenant.slade360.co.ke/oauth2/token/
          scopes: {}
  schemas:
    Invalid grant type:
      type: object
      properties:
        error:
          type: string
          example: unsupported grant type

    Invalid user credentials:
      type: object
      properties:
        error:
          type: string
          example: invalid grant
        error_description:
          type: string
          example: invalid credentials given

    Using user email and password:
      type: object
      properties:
        grant_type:
          type: string
          example: password

        client_id:
          type: string
          example: TTxh4hr0NeyBR7HAlZnLSlO9CWXfwoHnIUaqWQli
          description: |
            A unique identifier for your application on the authorization server.
            Login to your healthcloud dashboard to retrieve it.

        client_secret:
          type: string
          example: 77vejSg0ohd75U9TtAVcPrfg1WWfBNqrhIVzOYk7e...
          description: |
            A private secret for your application.
            Login to your healthcloud dashboard to retrieve it.

        username:
          type: string
          example: test@mail.com
          description: A registered user's email address.

        password:
          type: string
          description: A registered user's password.

    Using a refresh token:
      type: object
      properties:
        grant_type:
          type: string
          example: refresh_token

        client_id:
          type: string
          example: TTxh4hr0NeyBR7HAlZnLSlO9CWXfwoHnIUaqWQli
          description: |
            A unique identifier for your application on the authorization server.
            Login to your healthcloud dashboard to retrieve it.

        client_secret:
          type: string
          example: 77vejSg0ohd75U9TtAVcPrfg1WWfBNqrhIVzOYk7e...
          description: |
            A private secret for your application.
            Login to your healthcloud dashboard to retrieve it.

        refresh_token:
          type: string
          example: BytsnHxC5AcVbndTz3PR7RjRbty
          description: A `refresh_token` returned by a preceding request **Using user email and password.**

    Sandbox:
      type: object
      properties:
        success:
          type: string
          example: Your Slade360 OTP is 557031
          description: OTP embedded on the response object

    Production:
      type: object
      properties:
        success:
          type: string
          example: OTP was successfully sent
          description: The actual OTP will be sent to the member's phone number.

# ........................................................... AUTHORIZATION>>get_access_token .......................................................................................
paths:
  /oauth2/token/:
    post:
      security: []
      servers:
        - url: https://accounts.multitenant.slade360.co.ke
          description: "Authorization server for the sandbox environment."
      tags:
        - API_AUTHORIZATION
      operationId: get_access_token
      description: |
        Retrieve an `access_token` from the authorization server.
        This token will be used to authorize all API calls to the resource servers.
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/Using user email and password"
                - $ref: "#/components/schemas/Using a refresh token"

      responses:
        200:
          description: A valid access token returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token_type:
                    type: string
                    example: Bearer
                  access_token:
                    type: string
                    description: A valid access token to be used for subsequent API requests.
                    example: A3wOnHxC5AcVbndTz3PR7RjRbYN
                  scope:
                    type: string
                    description: Space delimited list of allowed scopes for the user.
                    example: "auth.bp_read auth.bp_write"
                  refresh_token:
                    type: string
                    description: Token to be used when requesting a new `access_token`.
                    example: BytsnHxC5AcVbndTz3PR7RjRbty
                  expires_in:
                    type: integer
                    description: Number of seconds remaining until the `access_token` expires.
                    example: 3600
        400:
          description: Invalid user credentials
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Invalid grant type"
                  - $ref: "#/components/schemas/Invalid user credentials"
        401:
          description: Invalid client credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: invalid_client

  #............................................................ AUTHORIZATION>>get_logged_in_user .......................................................................................
  /user/me/:
    get:
      servers:
        - url: https://accounts.multitenant.slade360.co.ke/v1/
          description: "Authorization server for the sandbox environment."
      tags:
        - API_AUTHORIZATION
      operationId: get_logged_in_user
      description: |
        **Demonstrates the use of the `access_token`** - This use case allows you to retrieve information about the user in session.
      parameters:
        - name: access_token
          in: header
          required: true
          description: A valid access token.
          schema:
            type: string
            example: A3wOnHxC5AcVbndTz3PR7RjRbYN

      x-codeSamples:
        - lang: "cURL"
          label: "CLI"
          source: |
            curl --header "Authorization: Bearer xusWuHUK0RibYYZRswJKUQIIfuiwf1" \
            https://accounts.multitenant.slade360.co.ke/v1/user/me/
        - lang: "python"
          label: "Python"
          source: |
            # pip install requests
            import requests

            access_token = ''  # Substitute with a valid access token.

            headers = {'Authorization': 'Bearer {}'.format(access_token)}
            response = requests.get(
                'https://accounts.multitenant.slade360.co.ke/v1/user/me/',
                headers=headers
            )

            response.raise_for_status()
            user_data = response.json()
        - lang: "javascript"
          label: "Node"
          source: |
            const request = async () => {
              const response = await fetch('https://accounts.multitenant.slade360.co.ke/v1/user/me/',{
                method: 'GET',
                headers: {
                  "Content-Type": "application/json",
                  'Authorization': `Bearer ${access_token}`
                }
              })

              const data = await response.json()
            }
      responses:
        200:
          description: Logged in user object returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  guid:
                    type: string
                  email:
                    type: string
                  first_name:
                    type: string
                  last_name:
                    type: string
                  other_names:
                    type: string
                  is_staff:
                    type: string
                  is_active:
                    type: string
                  permissions:
                    type: string
                  organisation:
                    type: string
                  business_partner:
                    type: string
                  roles:
                    type: string
                  bp_type:
                    type: string
                  allowed_scopes:
                    type: string
        401:
          description: Authentication credentials not provided.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Specific error message.
                    example: Authentication credentials were not provided.

  #............................................................ ELIGIBILITY>>get_member_eligibility .......................................................................................
  /beneficiaries/member_eligibility/:
    servers:
      - url: https://provider-edi-api.multitenant.slade360.co.ke/v1/
        description: "Provider integrations sandbox"
    get:
      tags:
        - MEMBER_ELIGIBILITY
      operationId: get_member_eligibility
      description: Retrive medical cover details for a specific member under a given insurer/payer.
      parameters:
        - name: member_number
          in: query
          required: true
          description: Member number printed on the insurance card.
          schema:
            type: string
            example: SIL/2022/01

        - name: payer_slade_code
          in: query
          required: true
          description: The insurer's identifier on slade.
          schema:
            type: integer
            example: 457

      x-codeSamples:
        - lang: "cURL"
          label: "CLI"
          source: |
            curl https://provider-edi-api.multitenant.slade360.co.ke/v1/beneficiaries/member_eligibility/?member_number=1234567&payer_slade_code=457 \
              --header "Content-Type: application/json" \
              --header "Accept: application/json" \
              --header "Authorization: Bearer xusWuHUK0RibYYZRswJKUQIIfuiwf1"
        - lang: "python"
          label: "Python"
          source: |
            # pip install requests
            import requests

            access_token = ''  # Substitute with a valid access token.
            member_number = '1234567'
            payer_slade_code = '457'
            headers = {'Authorization': 'Bearer {}'.format(access_token)}

            url = (
              'https://provider-edi-api.multitenant.slade360.co.ke/v1/beneficiaries/'
              'member_eligibility/?member_number={}&payer_slade_code={}'.format(
                 member_number, payer_slade_code
              )
            )

            response = requests.get(url, headers=headers)
            response.raise_for_status()

            user_data = response.json()
        - lang: "javascript"
          label: "Node"
          source: |
            let access_token = ''  # Substitute with a valid access token.
            let member_number = '1234567'
            let payer_slade_code = '457'

            const request = async () => {
              const response = await fetch(`https://provider-edi-api.multitenant.slade360.co.ke/v1/beneficiaries/member_eligibility/?member_number=${member_number}&payer_slade_code=${payer_slade_code}`,{
                method: 'GET',
                headers: {
                  "Content-Type": "application/json",
                  'Authorization': `Bearer ${access_token}`
                }
              })

              const data = await response.json()
            }
      responses:
        200:
          description: Eligibility payload for an insured member.
          content:
            application/json:
              schema:
                type: object
                properties:
                  eligibilityTime:
                    type: string
                    description: Time when the member's eligibility was retrieved.
                    example: 2023-02-02T12:34:12.258565Z
                  member:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: Member's unique system identifier.
                        example: 123
                      beneficiaryCode:
                        type: string
                        description: Member number.
                        example: SIL/2022/01
                      title:
                        type: string
                        description: Member's title.
                        example: Mr
                      names:
                        type: string
                        description: Full member name.
                        example: James Lincon
                      gender:
                        type: string
                        description: Member's gender as captured in the payer's system.
                        example: F
                      dateOfBirth:
                        type: string
                        description: Member's date of birth as a stringfied datetime object.
                        example: 1988-06-14T05:58:05.666526Z
                      isVip:
                        type: boolean
                        description: A flag to identify members flagged as VIPs by the payer.
                        example: false
                      isPrincipal:
                        type: boolean
                        description: Shows whether a member is a principal member or not.
                        example: true
                      principalMember:
                        type: integer
                        description: Unique identifier for the principal member. `null` for principals.
                        example: 1
                      principalRelationship:
                        type: string
                        enum:
                          - PRINCIPAL
                          - CHILD
                          - SPOUSE
                        description: Designated family relationship between the member and his/her principal.
                        example: CHILD
                      contacts:
                        type: array
                        description: A list of contacts that can be used for **OTP authentication**.
                        items:
                          properties:
                            id:
                              type: integer
                              description: Unique contact identifier.
                              example: 1
                            contactValue:
                              type: string
                              description: Member's phone number.
                              example: +254790830838
                      group:
                        type: string
                        description: Policy name
                        example: Mwema sacco
                      category:
                        type: string
                        description: Member's category name
                        example: CAT A
                      categoryCode:
                        type: string
                        description: Member's category code
                        example: 12345
                      isActive:
                        type: boolean
                        description: A flag denoting whether a member's cover is active or not.
                        example: true
                  cover:
                    type: object
                    description: member's cover details.
                    properties:
                      policyNumber:
                        type: string
                        description: member's policy number.
                        example: 1234
                      schemeCode:
                        type: string
                        description: member's scheme code.
                        example: SCH-001
                      schemeName:
                        type: string
                        description: member's scheme name.
                        example: Mwema sacco
                      status:
                        type: string
                        description: Member's cover status.
                        example: "LIVE"
                      validFrom:
                        type: string
                        description: Date from which the member's cover will be effective
                        example: "2018-01-30T08:58:05.490394+03:00"
                      validTo:
                        type: string
                        description: Last day of cover.
                        example: "2029-01-27T18:34:05.490394+03:00"
                  benefits:
                    type: array
                    description: An array of benefits the member is eligible to.
                    items:
                      properties:
                        benefitCode:
                          type: string
                          description: Benefit identifier.
                          example: 340
                        benefitLimit:
                          type: number
                          format: decimal
                          description: Initial benefit limit as setup by the insurer. (**This is not the member's available balance**)
                          example: 500000
                        benefitName:
                          type: string
                          example: Inpatient shared
                        benefitType:
                          type: string
                          example: INPATIENT

                        copayValue:
                          type: number
                          description: Copay payable by the member. (**interpretation described under `copayType`**)
                          example: 340

                        copayType:
                          type: string
                          example: FLAT
                          enum:
                            - PERCENTAGE
                            - FLAT
                            - NO_COPAY
                          description: |
                            | Value               |  Description                                                                    |
                            |---------------------|---------------------------------------------------------------------------------|
                            | `PERCENTAGE`        | The `copayValue` should be calculated as a percentage of the total claim amount.|
                            | `FLAT`              | The `copayValue` should be treated as a flat amount to be paid by the member.   |
                            | `NO_COPAY`          | Copay not applicable to this benefit.                                           |

                        copayAppliesTo:
                          type: string
                          description: Sublimit where the copay is applicable to.
                          example: 340

                        status:
                          type: string
                          enum:
                            - AVAILABLE
                            - PAST_THRESHOLD
                            - UNAVAILABLE
                            - CHECK_SMART_OR_CONFIRM_WITH_PAYER
                          description: |
                            | Value                                  | Description                                                                                                                                    |
                            |----------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------|
                            | `AVAILABLE`                            | The benefit has a usable balance. Your can proceed and make balance reservations for the member.                                               |
                            | `PAST_THRESHOLD`                       | Utilization threshold has been exhausted. Request preauthorization from the payer or advice the member to pay and seek reimbursment from payer.|
                            | `UNAVAILABLE`                          | Benefit balance exhausted.                                                                                                                     |
                            | `CHECK_SMART_OR_CONFIRM_WITH_PAYER`    | Slade does not manage balances for this member. Consult the specific card provider for balances to confirm the benefit balance                 |

                        errors:
                          type: array
                          description: |
                            An array of any irregularities with the member's data e.g `MISSING_ELIGIBILITY_DATA`, `EXPIRED_COVER` etc.
                            This field is usually empty for active members.
                          example: []
                        visitLimit:
                          type: string
                          description: The maximum limit that can be utilized without a preauthorization.
                          example: 15000
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  example:
                    { "memberNumber": "Please provide the `member_number`." }
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Your credentials aren't allowed
        500:
          description: Internal server error

  #........................................................... AUTHENTICATION>>request_otp .......................................................................................
  /beneficiaries/beneficiary_contacts/{contact_id}/send_otp/:
    servers:
      - url: https://provider-edi-api.multitenant.slade360.co.ke/v1/
        description: "Provider integrations sandbox"
    post:
      tags:
        - MEMBER_AUTHENTICATION
      operationId: request_otp
      description: Request an OTP to be sent to the member's registered phone number.
      parameters:
        - name: contact_id
          in: path
          required: true
          description: The `id` of one of the member's verified contact objects returned by the eligibility endpoint.
          schema:
            type: integer
            example: 1

      responses:
        200:
          description: A text message has been sent to the member's phone number.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/Sandbox"
                  - $ref: "#/components/schemas/Production"
        400:
          description: bad request
        401:
          description: Unauthorized
        404:
          description: Contact not found (use a valid contact `id` from the member's eligibility payload).
        500:
          description: Internal server error

  #........................................................... AUTHENTICATION>>verify_otp .......................................................................................
  /beneficiaries/beneficiary_contacts/{contact_id}/verify_otp/:
    servers:
      - url: https://provider-edi-api.multitenant.slade360.co.ke/v1/
        description: "Provider integrations sandbox"
    post:
      tags:
        - MEMBER_AUTHENTICATION
      operationId: verify_otp
      description: Verify that the OTP sent to the member is a valid OTP from slade360.
      parameters:
        - name: contact_id
          in: path
          required: true
          description: The `id` of the phone number used to request the OTP.
          schema:
            type: integer
            example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: integer
                  description: The one time pin (OTP) sent to the member's phone number.
                  example: 913180
      x-codeSamples:
        - lang: "python"
          label: "Python"
          source: |
            # pip install requests
            import requests

            # Substitute with a valid access token, contact `id`, and OTP.
            access_token, contact_id, otp = None, None, None

            headers = {'Authorization': 'Bearer {}'.format(access_token)}
            url = (
                'https://provider-edi-api.multitenant.slade360.co.ke/v1/beneficiaries/'
                'beneficiary_contacts/{}/verify_otp/'.format(contact_id)
            )

            response = requests.post(url, headers=headers, json={'token': otp})   
            response.raise_for_status()
            user_data = response.json()
        - lang: "javascript"
          label: "Node"
          source: |
            let access_token = ''  # Substitute with a valid access token.
            let contact_id = '1234567' # Substitute with a valid contact id.
            let otp = '913180'   # Substitute with a valid OTP.

            const request = async () => {
              const response = await fetch(`https://provider-edi-api.multitenant.slade360.co.ke/v1/beneficiaries/beneficiary_contacts/${contact_id}/verify_otp/`,{
                method: 'POST',
                headers: {
                  "Content-Type": "application/json",
                  'Authorization': `Bearer ${access_token}`
                },
                body: JSON.stringify({'token': ${otp}})
              })

              const data = await response.json()
            }

      responses:
        200:
          description: OTP verified successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 5488
                  contactType:
                    type: string
                    example: "PHO"
                  contactValue:
                    type: string
                    example: +254790360360
                  isMainContact:
                    type: boolean
                    example: True
                  isVerified:
                    type: boolean
                    example: True
                  isConfirmed:
                    type: boolean
                    example: True
                  capturedAtName:
                    type: string
                    example: ABC Insurance
                  capturedAtSladeCode:
                    type: integer
                    example: 2002
                  deactivationReason:
                    type: string
                    example: None
                  beneficiaryName:
                    type: string
                    example: "Francis Test_2"
                  beneficiaryCode:
                    type: string
                    example: DEMO-MERIDIAN-9724907
        400:
          description: bad request
        401:
          description: Unauthorized
        404:
          description: Contact not found (use a valid contact `id` from the member's eligibility payload).
        500:
          description: Internal server error

  #........................................................... AUTHENTICATION>>start_authorized_visit .......................................................................................
  /authorizations/start_visit/:
    post:
      tags:
        - START_VISIT
      operationId: start_visit_via_otp
      description: |
        Create a medical visit for an insured member already authenticated using OTP. At this point you should have already
        [looked up a member](#tag/MEMBER_ELIGIBILITY/operation/get_member_eligibility) and
        [authenticated him/her](#tag/MEMBER_AUTHENTICATION/operation/request_otp).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                beneficiary:
                  type: integer
                  description: The `member['id']` value from the member's eligibility response.
                  example: 1
                factors:
                  type: array
                  items:
                    type: string
                  example: ["OTP"]
                  description: Methods used to authenticate the member. `['OTP']`
                benefit_type:
                  type: string
                  description: The `benefits[index]['benefitType']` value from the member's eligibility response.
                  example: OUTPATIENT
                benefit_code:
                  type: string
                  description: The `benefits[index]['benefitCode']` value from the member's eligibility response.
                  example: 340
                policy_number:
                  type: string
                  description: The `cover['policyNumber']` value from the member's eligibility response.
                  example: 1334993
                policy_effective_date:
                  type: string
                  description: The `cover['validFrom']` value from the member's eligibility response.
                  example: 2022-01-17T00:00:00+03:00
                otp:
                  type: integer
                  description: A verified OTP. [*How to verify an OTP?*](#tag/MEMBER_AUTHENTICATION/operation/verify_otp).
                  example: 913180
                beneficiary_contact:
                  type: string
                  description: The member's phone number used when requesting for the OTP.
                  example: 254712345678
      responses:
        200:
          description: Response after successfuly creating a medical visit.
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    description: Human readable sucess message.
                    example: Authorization for Paul Mutinda successfully created
                  edi_auth_id:
                    type: integer
                    description: A unique identifier for the authorization linked to the visit.
                    example: 17387
                  edi_auth_guid:
                    type: string
                    description: A unique identifier for the authorization linked to the visit. **This will be used when creating balance reservations.**
                    example: 35b36a8a-6799-4ab5-81d8-1635adef3a6b
                  member_number:
                    type: string
                    description: Member number printed on the member's card.
                    example: 1234567
                  first_name:
                    type: string
                  last_name:
                    type: string
                  auth_token:
                    type: string
                    description: An authorization token linked to the created visit.
                    example: 234567-5TFHXF
        400:
          description: bad request
        401:
          description: Unauthorized
        404:
          description: Object not found
        500:
          description: Internal server error

  #........................................................... RESERVATION>>start_authorized_visit .......................................................................................
  /balances/reservations/reserve_from_authorization/:
    post:
      tags:
        - BALANCE_RESERVATION
      operationId: create_balance_reservation
      description: Create a balance reservation.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                authorization:
                  type: string
                  description: The `edi_auth_guid` returned in the start visit response.
                  example: 35b36a8a-6799-4ab5-81d8-1635adef3a6b
                invoice_number:
                  type: string
                  description: The invoice number for the anticipated bill.
                  example: ORE1234/22
                amount:
                  type: number
                  format: decimal
                  description: Amount to be reserved from the member's benefit balance.
                  example: 2500
      responses:
        200:
          description: Response after successfully creating a balance reservation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: Unique identifier for the reservation
                    example: 123
                  providerName:
                    type: string
                  guid:
                    type: string
                    description: The reservation's `guid`
                    example: 35b36a8a-6799-4ab5-81d8-1635adef3a6b
                  replicated:
                    type: string
                    example: 2022-05-27T14:58:16.163579+03:00
                  beneficiaryCode:
                    type: string
                  policyNumber:
                    type: string
                  policyEffectiveDate:
                    type: string
                  payerSladeCode:
                    type: integer
                  authorization:
                    type: string
                    description: The authorization `guid`
                    example: 35b36a8a-6799-4ab5-81d8-1635adef3a6b
                  invoiceNumber:
                    type: string
                  providerSladeCode:
                    type: integer
                  amount:
                    type: number
                    format: decimal
                  benefitCode:
                    type: string
                  parentBenefitCode:
                    type: string
                  benefit:
                    type: string
                  dateReserved:
                    type: string
                  amountReleased:
                    type: number
                    format: decimal
                  dateReleased:
                    type: string
                  releasedBy:
                    type: string
                  reservedVia:
                    type: string
                  expiryDate:
                    type: string
                  releaseNotes:
                    type: string
                  payerInvoiceReference:
                    type: string
        400:
          description: bad request
        401:
          description: Unauthorized
        404:
          description: Object not found
        500:
          description: Internal server error
